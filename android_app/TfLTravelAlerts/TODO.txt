Work list:
==========

1 - work with architecture
2 - add delete icon to alarm detail
3 - use live data et. al.


GENERAL:
========
- Make data binding receive a POJO (not "printer" interface inside, etc
- I don't like that there are three different objects for ConfiguredAlarms: the data class, the
entity and the "UI" class that is mutable (and has more fields)
- I can call @WorkerThread annotated methods from the UI thread without lint warnings
- send network errors to the subscribers
- I would like to avoid using reflection to parse json. perhaps could use come library that creates the json parser at compile time?
- user kotlin extensions for parceler
- check if Tfl Rail and tram have weekend status

Main/Initial Screen:
====================
- The code is a mess. Rewrite it in someway that looks better
- When the data changes in the adapters, it would be nice to refresh if the toolbar should collapse.
The easy case to spot an error is if a page is opened while the data is being downloaded (and there is
no cached data), when the data arrives if you scroll, the toolbar won't collapse as it ideally would.


Alert details using MVI:
========================

- [done] implement time selection
    - could try to "connect" the click event on time view to showing the fragment with a rx stream
- add a delete icon to the toolbar
    - maybe a delete button too
- the clock icon set as startDrawable will CRASH older android version
- handle tearing down the rx streams (activity on pause/stop/destroy)



MUST DO BEFORE RELEASE:
=======================
- layout in older android versions looks wrong
    - not getting compat version of switch view
    - spacing is wrong
- migrate alarms from previous version
- implement push notifications


COULD DO:
=========
- option to be always up to date with the line status
- add support for Tfl Rail and TRAM lines
- double check order of lines
- in the network status scrollingViews, collapse lines with good status
